name: Fetch Latest Code

on:
  push:
    branches:
      - feature/*
    paths-ignore:
      - "README.md"
      - "Contributing.md"

jobs:
  development:
    name: Fetch and Commit Latest Code
    runs-on: ubuntu-latest
    env:
      SOURCE_HOST_URL: ${{ secrets.SOURCE_HOST_URL }}
      SOURCE_TOKEN: ${{ secrets.SOURCE_TOKEN }}
      TARGET_HOST_URL: ${{ secrets.TARGET_HOST_URL }}
      TARGET_TOKEN: ${{ secrets.TARGET_TOKEN }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipx
          # Attempt to install from local file first
          VERSION=$(ls cicd_aihub-*-py3-none-any.whl | sed 's/cicd_aihub-\(.*\)-py3-none-any.whl/\1/' | head -n 1)

          if [ -n "$VERSION" ]; then
            echo "Found local .whl file: cicd_aihub-${VERSION}-py3-none-any.whl"
            pipx install cicd_aihub-${VERSION}-py3-none-any.whl
          else
            echo "No local .whl file found. Attempting to install from GitHub release."
            LATEST_RELEASE=$(curl -s https://api.github.com/repos/instabase/aihub-apps-ci-cd-workflows/releases/latest | jq -r .tag_name)
            VERSION=$(echo $LATEST_RELEASE | sed 's/^v//')
            
            if ! pipx install https://github.com/instabase/aihub-apps-ci-cd-workflows/releases/download/${LATEST_RELEASE}/cicd_aihub-${VERSION}-py3-none-any.whl; then
              echo "Failed to install from GitHub release after failing to find local .whl file. Aborting."
              exit 1
            fi
          fi

      - name: Validate config.json
        run: |
          if [ ! -f config.json ]; then
            echo "Error: config.json file not found"
            exit 1
          fi

      - name: Fetch Latest App Data
        run: |
          IS_ADVANCED=$(jq -r '.source.is_advanced' config.json)
          SB_NAME=$(jq -r '.source.sb_name' config.json)
          FLOW_PATH=$(jq -r '.source.flow_path' config.json)
          PROJECT_ID=$(jq -r '.source.project_id' config.json)
          if [ "$IS_ADVANCED" = "true" ] && [ -n "$FLOW_PATH" ] && [ "$FLOW_PATH" != "null" ]; then
            promote-solution --compile_solution --download_solution
          elif [ "$IS_ADVANCED" = "true" ] && [ -n "$SB_NAME" ] && [ "$SB_NAME" != "null" ]; then
            promote-sb-solution --compile_solution --download_solution
          elif [ "$IS_ADVANCED" = "false" ] && [ -n "$PROJECT_ID" ] && [ "$PROJECT_ID" != "null" ]; then
            promote-build-solution --compile_solution --download_solution
          else
            echo "Error: not a valid config.json"
            exit 1
          fi

      - name: Commit app data to feature branch
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "GitHub Actions"
          git config --global --add safe.directory /__w/${{ github.event.repository.name }}/*
          COMMIT_MESSAGE=$(jq -r '.release_notes // "Automated commit from GitHub Actions"' config.json)
          git add -f .
          git status
          git commit -m "$COMMIT_MESSAGE" --allow-empty
          git push origin ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
